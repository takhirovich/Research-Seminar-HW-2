How To Start A Career In iOS  Worlds First iOS Developer | CEO of iOSBFree How To Start A Career In iOS Let’s start this article by answering this question directly and concisely Q: So what do I do first as a beginner? A: Study and learn! Studying Keen and motivated engineers simply want to get their hands dirty by jumping straight into the code. But we must first be patient! It’s almost impossible within any skilled area to become good or even to an acceptable level if we have little or no experience in it. If we’re to build a solid career in iOS then we must understand both the basics and the fundamentals of software engineering. Online Courses Online courses are great! They are cheap, affordable, mobile-friendly and can be studied by anyone in any country or location in the world. With companies such as Udemy and LinkedIn Learning shifting the marketplace away from outdated academic institutions such as Universities it has never been easier to learn new skills directly from professionals (with decades of industry experience) in a small amount of time. Why not try our FREE ONLINE COURSES? Start Small We recommend offering your services as soon as you can. It can be a startup, people using online platforms such as UpWork or Fiver and anyone that requires cheap Labour. We recommend forgetting the money initially. That comes later. First, you’ll need the skills and learning that only come from hands-on experience. To gain the skills that you need you must spend time on the computer writing as many apps as you can. Experience is everything! Xcode Playgrounds We use Xcode playground files to test certain behaviour with many of our online courses. They are simply wonderful as a learning tool because they provide focus to the exact area you wish to learn. There are no distractions other than the few lines of code you are trying to understand. It’s exceptionally fast to try out and test behaviour of newly discovered syntax and core engineering concepts that most developers never learn. For example, have you learned about ARC and how the underlying memory works? Why not try to prove how you would prevent a retain cycle by writing a quick method in a playground file? We 100% recommend writing code within an Xcode playground file and practising core language features each and every week. Or perhaps even once a day. Remember, the more you study the faster you will learn! Study The Fundamentals Don’t just focus on what’s fun and exciting such as animations and cool graphics. The Core Graphics framework can be extremely fun and interesting but in an interview situation you’ll be discussing ARC memory management, reference & value types, variable capture within closures and architectural design patterns. Do you understand each of these concepts yet? The fundamentals can be taught fairly quickly and without much effort really. By using a simple Xcode playground file it could take less than one hour to practice some core fundamentals that some developers will never truly understand. You’d be surprised at how few developers take the time to actually do this! 